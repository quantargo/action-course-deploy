name: Course deployment
description: Deploy courses to quantargo.com

inputs:
  api-key:
    description: 'The API key of your Quantargo user'
    required: true

env:
  global:
    - RENV_CONFIG_REPOS_OVERRIDE=https://repository.quantargo.com/ubuntu-20.04/r-4.0.5-quantargo

runs:
  using: "composite"
  steps:
    - name: Install packages
      shell: bash
      run: |
        sudo apt-get install libopenblas-dev libcurl4-openssl-dev libmagick++-dev
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: '4.0.5'

    - uses: r-lib/actions/setup-pandoc@v1

    - uses: r-lib/actions/setup-renv@v1
      with:
        cache-version: 2
    
    - name: Install SO Files
      shell: bash
      run: |
        export R_HOME=$(Rscript -e "cat(Sys.getenv('R_HOME'))")
        echo $R_HOME
        aws --region eu-central-1 --no-sign-request s3 sync s3://quantargo-repo-public/r/bin/linux/ubuntu-20.04/contrib/4.0.5/SOFiles/ sofiles
        sudo mv sofiles/* $R_HOME/lib
        rm -rf sofiles

    - name: Install Python deployment packages
      shell: bash
      run: |
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -yq python3-pip
        sudo pip3 install pyyaml python-frontmatter lxml pytz python-dateutil

    - name: Copy action files to repository root
      shell: bash
      run: cp ${{ github.action_path }}/* .

    - name: Install R packages
      run: |
        options(repos = c(QUANTARGO = "https://repository.quantargo.com/ubuntu-20.04/r-4.0.5-quantargo", 
                          CRAN = "https://repository.quantargo.com/ubuntu-20.04/r-4.0.5"))
        install.packages(c("qlearn", "qbit"))
        webshot::install_phantomjs()
      shell: Rscript {0}

    - name: Production Deployment Content
      env:
        STAGE: prod
        QKEY: ${{ inputs.api-key }}
      if: endsWith(github.ref, '/master')
      shell: bash
      run: |
        make deploy SLUG=$(grep 'moduleId:' index.yml | tr ': ' '\n' | tail -n1)

    - name: Development Deployment Content
      env:
        STAGE: dev
        QKEY: ${{ inputs.api-key }}
        QBITURL: https://api.quantargo.com/v2-dev
      if: endsWith(github.ref, '/next')
      shell: bash
      run: |
        make deploy SLUG=$(grep 'moduleId:' index.yml | tr ': ' '\n' | tail -n1)

